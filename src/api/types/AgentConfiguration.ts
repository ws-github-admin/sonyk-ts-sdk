/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Sonyk from "../index.js";

/**
 * Complete configuration object for an AI voice agent. This JSON structure defines
 * all aspects of the agent's behavior, voice characteristics, and integrations.
 *
 * ## Key Components:
 *
 * ### LLM (Large Language Model)
 * Controls the agent's conversational intelligence and reasoning capabilities.
 *
 * ### STT (Speech-to-Text)
 * Handles voice recognition and transcription of caller speech.
 *
 * ### TTS (Text-to-Speech)
 * Manages voice synthesis and how the agent sounds to callers.
 *
 * ### Behavior Settings
 * Defines conversation flow, greetings, and interaction patterns.
 */
export interface AgentConfiguration {
    /**
     * Large Language Model configuration that powers the agent's conversational abilities.
     * This is the "brain" of your agent that processes user input and generates responses.
     */
    llm: Sonyk.AgentConfigurationLlm;
    /**
     * Speech-to-Text configuration that converts caller voice to text.
     * This determines how accurately the agent understands what callers say.
     */
    stt: Sonyk.AgentConfigurationStt;
    /**
     * Text-to-Speech configuration that controls how the agent's voice sounds.
     * This determines the personality and quality of the agent's speech.
     * This is the provider-specific ID that will be used.
     */
    tts: Sonyk.AgentConfigurationTts;
    /**
     * **Critical Setting**: The first thing your agent says when someone calls.
     * This sets the tone for the entire conversation.
     *
     * **Tips:**
     * - Keep it friendly and professional
     * - Clearly identify who/what the agent represents
     * - Ask how you can help
     * - Keep it under 20 words for best experience
     */
    firstMessage: string;
    /**
     * Optional webhook URL to receive call events and data.
     * Your server will receive POST requests with:
     * - Call transcripts
     * - Call summaries
     * - Call duration and costs
     * - Custom data from tool executions
     */
    webhookUrl?: string;
    /**
     * Optional phone number to forward calls to if the agent cannot handle them.
     * Useful for escalation or human handoff.
     */
    callForwardNumber?: string;
    /**
     * Schema definition for structured data extraction from calls.
     * This defines what data should be captured and returned after each call.
     */
    structuredDataSchema?: Record<string, unknown>;
}
