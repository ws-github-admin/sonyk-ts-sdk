/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface AssetConfiguration {
    fileProcessing?: AssetConfiguration.FileProcessing;
    textProcessing?: AssetConfiguration.TextProcessing;
    vectorSearch?: AssetConfiguration.VectorSearch;
    models?: AssetConfiguration.Models;
    storage?: AssetConfiguration.Storage;
}

export namespace AssetConfiguration {
    export interface FileProcessing {
        /** Maximum file size in bytes */
        maxFileSize?: number;
        /** Maximum file size in megabytes */
        maxFileSizeMB?: number;
        /** Supported file extensions */
        allowedFileTypes?: string[];
        /** Temporary directory for file processing */
        tempDir?: string;
    }

    export interface TextProcessing {
        /** Target size for text chunks */
        chunkSize?: number;
        /** Overlap between consecutive chunks */
        chunkOverlap?: number;
        /** Whether AI-powered text cleaning is enabled */
        sanitizationEnabled?: boolean;
        /** Minimum required text length */
        minTextLength?: number;
        /** Maximum allowed text length */
        maxTextLength?: number;
    }

    export interface VectorSearch {
        /** AI model used for generating embeddings */
        embeddingModel?: string;
        /** Number of dimensions in vector embeddings */
        vectorDimensions?: number;
        /** Default threshold for similarity searches */
        defaultSimilarityThreshold?: number;
        /** Maximum number of search results returned */
        maxSearchResults?: number;
    }

    export interface Models {
        /** Model used for text embeddings */
        embedding?: string;
        /** Model used for text sanitization */
        sanitization?: string;
    }

    export interface Storage {
        /** Cloud storage provider */
        provider?: string;
        /** Storage bucket name */
        bucket?: string;
    }
}
