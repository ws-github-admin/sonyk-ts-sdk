/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Sonyk from "../index.js";

export interface CreateToolRequest {
    /**
     * Unique name for the tool. This will be the function name that the agent uses.
     * Use snake_case format (e.g., make_reservation, get_weather, send_email).
     */
    tool_name: string;
    /**
     * Detailed description of what the tool does. The agent uses this to understand
     * when and how to use the tool. Be specific about the tool's purpose and behavior.
     */
    tool_description: string;
    /**
     * The API endpoint URL that will be called when the agent uses this tool.
     * This should be a complete, accessible URL that accepts the specified HTTP method.
     */
    tool_endpoint: string;
    /**
     * HTTP method to use when calling the tool:
     * - **GET**: Retrieve information
     * - **POST**: Create new resources
     * - **PUT**: Update existing resources
     * - **DELETE**: Remove resources
     */
    tool_method: CreateToolRequest.ToolMethod;
    /**
     * HTTP headers to include with all tool requests.
     * Common headers include Content-Type and Authorization.
     */
    tool_headers?: Record<string, string>;
    /**
     * Parameters that the tool accepts. Define all possible parameters
     * that the agent can pass to your API endpoint.
     */
    parameters?: Sonyk.CreateToolParameterRequest[];
}

export namespace CreateToolRequest {
    /**
     * HTTP method to use when calling the tool:
     * - **GET**: Retrieve information
     * - **POST**: Create new resources
     * - **PUT**: Update existing resources
     * - **DELETE**: Remove resources
     */
    export type ToolMethod = "GET" | "POST" | "PUT" | "DELETE";
    export const ToolMethod = {
        Get: "GET",
        Post: "POST",
        Put: "PUT",
        Delete: "DELETE",
    } as const;
}
