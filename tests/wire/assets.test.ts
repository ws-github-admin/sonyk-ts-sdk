/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { SonykClient } from "../../src/Client";

describe("Assets", () => {
    test("listAgentAssets", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            meta: { pagination: { currentPage: 1, totalPages: 1, totalItems: 1, itemsPerPage: 1 } },
            data: [
                {
                    pk_asset_id: 123,
                    fk_agent_id: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
                    type: "FILE",
                    title: "Product Documentation v2.1",
                    url: "gs://sonyk-bucket/assets/agent_123/456/text.txt",
                    fk_user_id: 789,
                    date_created: "2025-01-15T10:30:00Z",
                    is_active: true,
                    chunk_count: 23,
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.listAgentAssets("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", {
            search: "product documentation",
        });
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            meta: {
                pagination: {
                    currentPage: 1,
                    totalPages: 1,
                    totalItems: 1,
                    itemsPerPage: 1,
                },
            },
            data: [
                {
                    pk_asset_id: 123,
                    fk_agent_id: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
                    type: "FILE",
                    title: "Product Documentation v2.1",
                    url: "gs://sonyk-bucket/assets/agent_123/456/text.txt",
                    fk_user_id: 789,
                    date_created: "2025-01-15T10:30:00Z",
                    is_active: true,
                    chunk_count: 23,
                },
            ],
        });
    });

    test("getAgentAssetDetails", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                pk_asset_id: 123,
                fk_agent_id: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
                type: "FILE",
                title: "Product Documentation v2.1",
                url: "gs://sonyk-bucket/assets/agent_123/456/text.txt",
                fk_user_id: 789,
                date_created: "2025-01-15T10:30:00Z",
                is_active: true,
                chunk_count: 23,
                chunks: [
                    {
                        pk_chunk_id: 1001,
                        chunk_text:
                            "Our product features include advanced AI capabilities, real-time processing, and seamless integration with existing systems.",
                        date_created: "2025-01-15T10:35:00Z",
                    },
                ],
                creator: { pk_user_id: 1, name: "name", email: "email" },
            },
        };
        server
            .mockEndpoint()
            .get("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/4567")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.getAgentAssetDetails("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", 4567);
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                pk_asset_id: 123,
                fk_agent_id: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
                type: "FILE",
                title: "Product Documentation v2.1",
                url: "gs://sonyk-bucket/assets/agent_123/456/text.txt",
                fk_user_id: 789,
                date_created: "2025-01-15T10:30:00Z",
                is_active: true,
                chunk_count: 23,
                chunks: [
                    {
                        pk_chunk_id: 1001,
                        chunk_text:
                            "Our product features include advanced AI capabilities, real-time processing, and seamless integration with existing systems.",
                        date_created: "2025-01-15T10:35:00Z",
                    },
                ],
                creator: {
                    pk_user_id: 1,
                    name: "name",
                    email: "email",
                },
            },
        });
    });

    test("updateAgentAsset", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: { chunkCount: 1 },
        };
        server
            .mockEndpoint()
            .put("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/4569")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.updateAgentAsset("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", 4569);
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                chunkCount: 1,
            },
        });
    });

    test("deleteAgentAsset", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: { assetId: 1, chunksRemoved: 1 },
        };
        server
            .mockEndpoint()
            .delete("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/4369")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.deleteAgentAsset("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", 4369);
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                assetId: 1,
                chunksRemoved: 1,
            },
        });
    });

    test("createAgentTextAsset", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            text: "# Customer Service FAQ - Updated January 2025\n\n## Business Information\n\n### Q: What are your business hours?\nA: We are open Monday to Friday from 9 AM to 6 PM EST. Weekend support is available via email only.\n\n### Q: Where are you located?\nA: Our headquarters is at 123 Business St, City, State 12345. We also have locations in Chicago and Miami.\n\n## Product Support\n\n### Q: How do I return a product?\nA: Returns are easy! Visit our website's return portal, print a shipping label, and send the item back within 30 days. Refunds are processed within 5-7 business days.\n\n### Q: What's your warranty policy?\nA: All products come with a standard 1-year warranty. Extended warranties up to 3 years are available for purchase.\n\n## Account Management\n\n### Q: How do I reset my password?\nA: Click 'Forgot Password' on the login page, enter your email, and follow the instructions sent to your inbox. The reset link expires in 24 hours.\n\n### Q: Can I change my subscription plan?\nA: Yes! Log into your account, go to Settings > Subscription, and select your new plan. Changes take effect immediately.\n",
        };
        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                assetId: 124,
                title: "Customer Service FAQ v3.0",
                type: "TEXT",
                url: "gs://sonyk-bucket/assets/agent_123/124/text.txt",
                textLength: 1487,
                chunkCount: 8,
                processingInfo: {
                    chunkSize: 1000,
                    embeddingModel: "text-embedding-3-small",
                    processingTime: 2.15,
                    structureDetected: true,
                },
            },
        };
        server
            .mockEndpoint()
            .post("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/text")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.createAgentTextAsset("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", {
            text: "# Customer Service FAQ - Updated January 2025\n\n## Business Information\n\n### Q: What are your business hours?\nA: We are open Monday to Friday from 9 AM to 6 PM EST. Weekend support is available via email only.\n\n### Q: Where are you located?\nA: Our headquarters is at 123 Business St, City, State 12345. We also have locations in Chicago and Miami.\n\n## Product Support\n\n### Q: How do I return a product?\nA: Returns are easy! Visit our website's return portal, print a shipping label, and send the item back within 30 days. Refunds are processed within 5-7 business days.\n\n### Q: What's your warranty policy?\nA: All products come with a standard 1-year warranty. Extended warranties up to 3 years are available for purchase.\n\n## Account Management\n\n### Q: How do I reset my password?\nA: Click 'Forgot Password' on the login page, enter your email, and follow the instructions sent to your inbox. The reset link expires in 24 hours.\n\n### Q: Can I change my subscription plan?\nA: Yes! Log into your account, go to Settings > Subscription, and select your new plan. Changes take effect immediately.\n",
        });
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                assetId: 124,
                title: "Customer Service FAQ v3.0",
                type: "TEXT",
                url: "gs://sonyk-bucket/assets/agent_123/124/text.txt",
                textLength: 1487,
                chunkCount: 8,
                processingInfo: {
                    chunkSize: 1000,
                    embeddingModel: "text-embedding-3-small",
                    processingTime: 2.15,
                    structureDetected: true,
                },
            },
        });
    });

    test("getAgentAssetContent", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                assetId: 123,
                title: "Product Documentation v2.1",
                type: "FILE",
                content:
                    "# Product Documentation v2.1\n\n## Overview\nOur flagship product offers advanced features designed for modern businesses...\n\n## Features\n- Real-time processing capabilities\n- Advanced AI integration\n- Seamless API connectivity\n\n## Installation\nFollow these steps for quick setup:\n1. Download the installer from our website\n2. Run the installation wizard\n3. Configure your API keys\n",
                contentLength: 15420,
                dateCreated: "2025-01-15T10:30:00Z",
                lastModified: "2025-01-20T14:22:00Z",
            },
        };
        server
            .mockEndpoint()
            .get("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/3478/content")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.getAgentAssetContent("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", 3478);
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                assetId: 123,
                title: "Product Documentation v2.1",
                type: "FILE",
                content:
                    "# Product Documentation v2.1\n\n## Overview\nOur flagship product offers advanced features designed for modern businesses...\n\n## Features\n- Real-time processing capabilities\n- Advanced AI integration\n- Seamless API connectivity\n\n## Installation\nFollow these steps for quick setup:\n1. Download the installer from our website\n2. Run the installation wizard\n3. Configure your API keys\n",
                contentLength: 15420,
                dateCreated: "2025-01-15T10:30:00Z",
                lastModified: "2025-01-20T14:22:00Z",
            },
        });
    });

    test("searchAgentAssets", async () => {
        const server = mockServerPool.createServer();
        const client = new SonykClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { query: "How do I reset my password?" };
        const rawResponseBody = {
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                query: "How do I reset my password?",
                results: [
                    {
                        pk_chunk_id: 156,
                        fk_asset_id: 12,
                        chunk_text:
                            "To reset your password, go to the login page and click 'Forgot Password'. Enter your email address and check your inbox for reset instructions.",
                        chunk_type: "DOCUMENT",
                        title: "User Guide",
                        asset_type: "FILE",
                        date_created: "2025-01-15T10:30:00Z",
                        similarity: 0.92,
                    },
                    {
                        pk_chunk_id: 203,
                        fk_asset_id: 18,
                        chunk_text:
                            "Password requirements: minimum 8 characters, one uppercase letter, one number, and one special character.",
                        chunk_type: "DOCUMENT",
                        title: "Security Guidelines",
                        asset_type: "TEXT",
                        date_created: "2025-01-10T14:22:00Z",
                        similarity: 0.85,
                    },
                ],
                count: 2,
                searchConfig: {
                    similarityThreshold: 0.8,
                    maxResults: 5,
                    embeddingModel: "text-embedding-3-small",
                    typeFilter: "all",
                },
            },
        };
        server
            .mockEndpoint()
            .post("/api/developer/assets/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx/search")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.assets.searchAgentAssets("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx", {
            query: "How do I reset my password?",
        });
        expect(response).toEqual({
            success: true,
            message: "message",
            timestamp: "2024-01-15T09:30:00Z",
            data: {
                query: "How do I reset my password?",
                results: [
                    {
                        pk_chunk_id: 156,
                        fk_asset_id: 12,
                        chunk_text:
                            "To reset your password, go to the login page and click 'Forgot Password'. Enter your email address and check your inbox for reset instructions.",
                        chunk_type: "DOCUMENT",
                        title: "User Guide",
                        asset_type: "FILE",
                        date_created: "2025-01-15T10:30:00Z",
                        similarity: 0.92,
                    },
                    {
                        pk_chunk_id: 203,
                        fk_asset_id: 18,
                        chunk_text:
                            "Password requirements: minimum 8 characters, one uppercase letter, one number, and one special character.",
                        chunk_type: "DOCUMENT",
                        title: "Security Guidelines",
                        asset_type: "TEXT",
                        date_created: "2025-01-10T14:22:00Z",
                        similarity: 0.85,
                    },
                ],
                count: 2,
                searchConfig: {
                    similarityThreshold: 0.8,
                    maxResults: 5,
                    embeddingModel: "text-embedding-3-small",
                    typeFilter: "all",
                },
            },
        });
    });
});
